import sys
from cubesolver import Cube
from cubesolver import CubeSolver

def main(argv):
    cube = Cube()
    cube.execute_string("R U R' U' R U R' U' R U R' U' R U R' U' R U R' U' R U R' U'")
    assert CubeSolver.check_solved(cube)
    cube.execute_string("M' U M' U M' U M' U M' U M' U M' U M' U")
    assert CubeSolver.check_solved(cube)
    cube.execute_string("F R U R' F R U R' F R U R' F R U R' F R U R' F R U R' F R U R' F R U R' F R U R' F R U R'")
    assert CubeSolver.check_solved(cube)
    cube.execute_string("U")
    assert CubeSolver.check_cross(cube)
    assert CubeSolver.check_bottom(cube)
    assert CubeSolver.check_middle(cube)
    assert CubeSolver.check_oll(cube)
    assert not CubeSolver.check_pll(cube)
    cube.execute_string("U' R U R'")
    assert CubeSolver.check_cross(cube)
    assert not CubeSolver.check_bottom(cube)
    assert not CubeSolver.check_middle(cube)
    assert not CubeSolver.check_pll(cube)
    assert not CubeSolver.check_oll(cube)
    cube.execute_string("R U' R'")
    assert CubeSolver.check_solved(cube)
    print "\ntest PLL \n"
    cube.execute_string("R U' R U R U R U' R' U' R2 U'")
    solution = CubeSolver.solve(cube)
    print " ".join(solution)
    assert CubeSolver.check_solved(cube)
    cube.execute_string("R2 U R U R' U' R' U' R' U R' U")
    solution = CubeSolver.solve(cube)
    print " ".join(solution)
    assert CubeSolver.check_solved(cube)
    cube.execute_string("M2' U M2' U2 M2' U M2'")
    solution = CubeSolver.solve(cube)
    print " ".join(solution)
    assert CubeSolver.check_solved(cube)
    cube.execute_string("M2' U M2' U M' U2 M2' U2 M' U2")
    solution = CubeSolver.solve(cube)
    print " ".join(solution)
    assert CubeSolver.check_solved(cube)
    print "\ntest OLL \n"
    cube.execute_string("R U2 R' U' R U R' U' R U' R'")
    solution = CubeSolver.solve(cube)
    print " ".join(solution)
    assert CubeSolver.check_solved(cube)
    cube.execute_string("l' U' L U R U' r' F")
    solution = CubeSolver.solve(cube)
    print " ".join(solution)
    assert CubeSolver.check_solved(cube)
    #test_cube = Cube("test")
    #print test_cube.show()
    #test_cube.execute_string("z'")
    #print test_cube.show()
    #test_cube.execute_string("z")
    #print test_cube.show()

if __name__ == "__main__":
    main(sys.argv[1:])
